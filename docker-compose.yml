version: '3.8'

services:
  postgres_db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432" 

  rabbitmq_mq:
    image: rabbitmq:3-management-alpine 
    restart: always
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672" # פורט לחיבור Workers
      - "15672:15672" # פורט לממשק הניהול (http://localhost:15672)

  fastapi_api:
    build:
      context: ./backend-api 
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      MQ_HOST: ${MQ_HOST}
    ports:
      - "${FASTAPI_PORT}:8000" 
    depends_on:
      - postgres_db # ודא ש-DB פועל לפני ש-API מנסה להתחבר
      - rabbitmq_mq

  internal_worker:
    build:
      context: ./internal-worker
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      MQ_HOST: ${MQ_HOST}
    depends_on:
      - postgres_db
      - rabbitmq_mq

  external_worker:
    build:
      context: ./external-worker
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      MQ_HOST: ${MQ_HOST}
      TMDB_API_KEY: ${TMDB_API_KEY} 
    depends_on:
      - postgres_db
      - rabbitmq_mq

  frontend_ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000" 

volumes:
  postgres_data: 